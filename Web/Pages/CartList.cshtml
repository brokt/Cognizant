@page
@model Web.Pages.CartListModel
@{
}
@Html.AntiForgeryToken()
<style>
    div.jtable-main-container table.jtable tfoot {
        background: url('../../lightcolor/bg-tfoot.png') repeat-x scroll top left #dddddd;
        border-top: 1px solid #C8C8C8;
        border-bottom: 1px solid #C8C8C8;
    }

        div.jtable-main-container table.jtable tfoot th {
            padding: 4px 3px 4px 6px;
            border-left: 1px solid #fff;
            border-right: 1px solid #C8C8C8;
        }

            div.jtable-main-container table.jtable tfoot th:first-child {
                border-left: none;
            }

        div.jtable-main-container table.jtable tfoot thth:last-child {
            border-right: none;
        }
</style>
<div id="cartList"></div>

@section Scripts{
    <script>
    $(document).ready(function () {

        $.ajaxSetup({
            beforeSend: function (request) {
                request.setRequestHeader("RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
            },
        });


        var fields = {
            id: { title: 'Id', width: '8%' },
            make: { title: 'Brand', width: '21%' },
            model: { title: 'Model', width: '21%' },
            year_model: { title: 'Year Model', width: '21%' },
            date_added: {
                title: 'Date Added', width: '21%', type: 'date', displayFormat: 'dd.mm.yy', create: false, edit: false
            },
            price: {
                title: 'Price',
                width: '20%',
                footer: function (data) {
                    debugger;
                    var totalAmount = 0;
                    for (var i = 0; i < data.Records.length; i++) {
                        totalVehicles += data[i].price;
                    }
                    return "<b>" + totalAmount + "</b>"
                }
            },
            Other: {
                title: 'Other',
                display: function (data) {
                    console.log(data);
                    if (data.record.licensed) {
                        return '<button title="Edit" class="jtable-command-button jtable-edit-command-button" onclick="onDetail(' + data.record._id + '); return false;"><span>Edit</span></button>';
                    }

                },
                create: false,
                edit: false

            }
        }

        var actions = {
            listAction: '/CartList' + "?handler=Read",
            actions: {
                title: 'Actions',
                width: '1%',
                sorting: false,
                create: false,
                edit: false,
                list: true,
                display: function (data) {
                    if (data.record) {
                        // This if you want a custom edit action.
                        return '<button title="Edit" class="jtable-command-button jtable-edit-command-button" onclick="onDetail(' + data.record.id + '); return false;"><span>Edit</span></button>';
                    }
                }
            }
            @* updateAction: '@Url.Action("UpdateCvInformation","CvInformation")',
            createAction: '@Url.Action("CreateCvInformation","CvInformation")',
                deleteAction: '@Url.Action("DeleteCvInformation","CvInformation")' *@
        }


        $.jqueryTable($("#cartList"), "Cart List", fields, actions, true, true);
    });
    </script>
}